/*
Pokémon neo
------------------------------

file        : choiceBox.h
author      : Philip Wellnitz
description : Consult corresponding source file.

Copyright (C) 2012 - 2020
Philip Wellnitz

This file is part of Pokémon neo.

Pokémon neo is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Pokémon neo is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Pokémon neo.  If not, see <http://www.gnu.org/licenses/>.
*/

#pragma once

#include <nds.h>
#include "uio.h"
#include "pokemon.h"

namespace IO {
    /*
     * @brief: Runs a message box with a YES and a NO choice.
     */
    class choiceBox {
      public:
        static void DEFAULT_TICK( ) { }
        typedef u8 selection;
        static constexpr selection EXIT_CHOICE = 254;
        static constexpr selection BACK_CHOICE = 255;
        static constexpr selection NEXT_PAGE_CHOICE = 250;
        static constexpr selection PREV_PAGE_CHOICE = 251;

        enum mode {
            MODE_UP_DOWN = 0,               // A single column of up to 3 choices (per page)
            MODE_UP_DOWN_LEFT_RIGHT = 1,    // Two columns of up to 6 choices (per page) in total
            MODE_UP_DOWN_SINGLE = 2,        // A single column that extends up and downwards
        };

      private:
        mode _mode;
      public:
        choiceBox( mode p_mode = MODE_UP_DOWN ) : _mode( p_mode ) { }
        /*
         * @brief: Opens a choiceBox and returns the player's selection.
         * @param p_drawFunction: Callback used to draw a page of the choiceBox; should
         * return all choices visible for the specified page only.
         * @param p_selectFunction: Callback used when the player selects a choice.
         * @returns: A choice from the choices generated by p_drawFunction (but never
         * NEXT_PAGE_CHOICE or PREV_PAGE_CHOICE)
         */
        selection getResult( std::function<std::vector<std::pair<inputTarget, selection>>(u8)>
                             p_drawFunction, std::function<void(selection)> p_selectFunction,
                             selection p_initialSelection = 0,
                             std::function<void( )> p_tick = DEFAULT_TICK );

        [[deprecated]]
        choiceBox( int p_num, const char** p_choices, const char* p_name, bool p_big );

        [[deprecated]]
        void draw( u8 p_pressedIdx );
        [[deprecated]]
        int  getResult( const char* p_text = 0, bool p_backButton = false, bool p_drawSub = true,
                        u8 p_initialSelection = 0 );
        [[deprecated]]
        void kill( );

      private:
        const char** _choices;
        bool         _big;
        u8           _num;
        const char*  _name;
        const char*  _text;
        u8           _acPage;
        u8           _selectedIdx;

        bool _drawSub;

        void updateButtons( bool p_backButton );
    };
}
